<Window x:Class="PowerfulWizard.SequenceConfiguratorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PowerfulWizard"
        Title="Sequence Configurator" 
        Height="700" Width="800"
        Icon="favicon.ico"
        WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <local:ClickTypeToIndexConverter x:Key="ClickTypeToIndexConverter"/>
        <local:LoopModeToIndexConverter x:Key="LoopModeToIndexConverter"/>
        <local:IsLoopCountVisibleConverter x:Key="IsLoopCountVisibleConverter"/>
        <local:EnumToIndexConverter x:Key="EnumToIndexConverter"/>
        <local:IsCustomSpeedConverter x:Key="IsCustomSpeedConverter"/>
        <local:TargetModeToIndexConverter x:Key="TargetModeToIndexConverter"/>
        <local:IsColorClickModeConverter x:Key="IsColorClickModeConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
                          <!-- Dark Mode Styles - Matching Main Window -->
         <Style TargetType="ComboBox">
             <Setter Property="Background" Value="#2D2D30"/>
             <Setter Property="Foreground" Value="White"/>
             <Setter Property="BorderBrush" Value="#3F3F46"/>
             <Setter Property="Template">
                 <Setter.Value>
                     <ControlTemplate TargetType="ComboBox">
                         <Grid>
                             <ToggleButton Name="ToggleButton" Background="#2D2D30" BorderBrush="#3F3F46" 
                                           Foreground="White" BorderThickness="1"
                                           IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           ClickMode="Press">
                                 <Grid>
                                     <Grid.ColumnDefinitions>
                                         <ColumnDefinition />
                                         <ColumnDefinition Width="20" />
                                     </Grid.ColumnDefinitions>
                                     <ContentPresenter Name="ContentSite" IsHitTestVisible="False" 
                                                       Content="{TemplateBinding SelectionBoxItem}"
                                                       ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                       ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                       Margin="3,3,23,3" VerticalAlignment="Stretch" 
                                                       HorizontalAlignment="Left" />
                                     <TextBlock Grid.Column="1" Text="â–¼" HorizontalAlignment="Center" 
                                                VerticalAlignment="Center" Foreground="White"/>
                                 </Grid>
                             </ToggleButton>
                             <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" 
                                    AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                 <Grid Name="DropDown" SnapsToDevicePixels="True" 
                                       MinWidth="{TemplateBinding ActualWidth}" MaxHeight="200">
                                     <Border Background="#2D2D30" BorderThickness="1" BorderBrush="#3F3F46"/>
                                     <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                         <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                     </ScrollViewer>
                                 </Grid>
                             </Popup>
                         </Grid>
                     </ControlTemplate>
                 </Setter.Value>
             </Setter>
         </Style>
        
                 <Style TargetType="ComboBoxItem">
             <Setter Property="Background" Value="#2D2D30"/>
             <Setter Property="Foreground" Value="White"/>
             <Setter Property="BorderBrush" Value="#3F3F46"/>
             <Style.Triggers>
                 <Trigger Property="IsHighlighted" Value="True">
                     <Setter Property="Background" Value="#3F3F46"/>
                     <Setter Property="Foreground" Value="White"/>
                 </Trigger>
                 <Trigger Property="IsSelected" Value="True">
                     <Setter Property="Background" Value="#444444"/>
                     <Setter Property="Foreground" Value="White"/>
                 </Trigger>
             </Style.Triggers>
         </Style>
        
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CaretBrush" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#007ACC"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#5F5F66"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
                 <Style TargetType="Button">
             <Setter Property="Background" Value="#333333"/>
             <Setter Property="Foreground" Value="#FFFFFF"/>
             <Setter Property="BorderBrush" Value="#555555"/>
             <Setter Property="BorderThickness" Value="1"/>
             <Setter Property="Cursor" Value="Hand"/>
             <Style.Triggers>
                 <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Background" Value="#555555"/>
                 </Trigger>
                 <Trigger Property="IsPressed" Value="True">
                     <Setter Property="Background" Value="#444444"/>
                 </Trigger>
             </Style.Triggers>
         </Style>
        
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <Style TargetType="Expander">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <Style TargetType="ListView">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
        </Style>
        
        <Style TargetType="ScrollViewer">
            <Setter Property="Background" Value="#2D2D30"/>
        </Style>
        
        <!-- Window Background Style -->
        <Style TargetType="Window">
            <Setter Property="Background" Value="#2D2D30"/>
        </Style>
        
                          <!-- Special Button Styles -->
         <Style x:Key="SaveLoadButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
             <Setter Property="Background" Value="#333333"/>
         </Style>
         
         <Style x:Key="UseSequenceButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
             <Setter Property="Background" Value="#1E4A1E"/>
         </Style>
         
         <Style x:Key="CancelButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
             <Setter Property="Background" Value="#4A1E1E"/>
         </Style>
         
         <Style x:Key="SetAreaButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
             <Setter Property="Background" Value="#333333"/>
             <Setter Property="Foreground" Value="#FFFFFF"/>
             <Setter Property="BorderBrush" Value="#555555"/>
         </Style>
    </Window.Resources>
    
    <Grid Background="#2D2D30">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Header -->
        <Grid Grid.Row="0" Background="#252529" Margin="10">
            <Grid Margin="15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Grid.Column="0" Text="Sequence Name:" Foreground="White" 
                       VerticalAlignment="Center" FontWeight="Bold" Margin="0,0,15,0"/>
            <TextBox Grid.Column="1" x:Name="SequenceNameTextBox" 
                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,20,0" VerticalAlignment="Center"/>
            
            <!-- Loop Mode -->
            <Label Grid.Column="2" Content="Loop Mode:" Foreground="White" VerticalAlignment="Center" Margin="0,0,10,0"/>
            <StackPanel Grid.Column="3" Orientation="Horizontal">
                <ComboBox x:Name="LoopModeComboBox" Width="120" 
                          SelectedIndex="{Binding LoopMode, Converter={StaticResource LoopModeToIndexConverter}}">
                    <ComboBoxItem Content="Run Once"/>
                    <ComboBoxItem Content="Loop Forever"/>
                    <ComboBoxItem Content="Loop X Times"/>
                </ComboBox>
                <TextBox x:Name="LoopCountTextBox" Width="60" Margin="10,0,0,0" 
                         Text="{Binding LoopCount, UpdateSourceTrigger=PropertyChanged}"
                         Visibility="{Binding LoopMode, Converter={StaticResource IsLoopCountVisibleConverter}}"/>
            </StackPanel>
            </Grid>
        </Grid>
        
        <!-- Sequence Steps -->
        <Grid Grid.Row="1" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <TextBlock Grid.Row="0" Text="Sequence Steps:" FontWeight="Bold" Margin="0,0,0,10" Foreground="White"/>
            
                         <ScrollViewer Grid.Row="1" x:Name="StepsScrollViewer" 
                          VerticalScrollBarVisibility="Auto"
                          CanContentScroll="False"
                          Background="Transparent">
                 <ItemsControl x:Name="StepsItemsControl" 
                              ItemsSource="{Binding Steps}">
                     <ItemsControl.ItemTemplate>
                         <DataTemplate>
                                                 <Border Margin="5" Padding="10" Background="#252529" 
                                 BorderBrush="#3F3F46" BorderThickness="1" CornerRadius="5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Step Header -->
                                <Grid Grid.Row="0" Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBox Grid.Column="0" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                             Background="Transparent" BorderThickness="0" FontWeight="Bold" Foreground="White" 
                                             VerticalAlignment="Center" Margin="0,2,0,2" Height="24" Padding="4,2"/>
                                    
                                    <Button Grid.Column="1" Content="â†‘" Width="30" Height="25" Margin="2"
                                            Click="OnMoveStepUpClick" Tag="{Binding}"/>
                                    <Button Grid.Column="2" Content="â†“" Width="30" Height="25" Margin="2"
                                            Click="OnMoveStepDownClick" Tag="{Binding}"/>
                                    <Button Grid.Column="3" Content="Ã—" Width="30" Height="25" Margin="2"
                                            Click="OnDeleteStepClick" Tag="{Binding}"/>
                                </Grid>
                                
                                <!-- Step Details -->
                                <Expander Grid.Row="1" IsExpanded="True">
                                    <StackPanel>
                                        <!-- Click Type and Timing -->
                                        <Grid Margin="0,0,0,10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            
                                            <Label Grid.Column="0" Content="Click Type:" Foreground="White"/>
                                            <ComboBox Grid.Column="1" Width="120" Margin="5,0,15,0" 
                                                      SelectedIndex="{Binding ClickType, Converter={StaticResource ClickTypeToIndexConverter}}">
                                                <ComboBoxItem Content="Left Click"/>
                                                <ComboBoxItem Content="Right Click"/>
                                                <ComboBoxItem Content="Middle Click"/>
                                                <ComboBoxItem Content="Double Click"/>
                                            </ComboBox>
                                            
                                            <Label Grid.Column="2" Content="Delay:" Foreground="White"/>
                                            <StackPanel Grid.Column="3" Orientation="Horizontal" Margin="5,0,0,0">
                                                <TextBox Width="60" Text="{Binding DelayMs, UpdateSourceTrigger=PropertyChanged}"/>
                                                <Label Content="ms" Foreground="White" Margin="5,0,0,0"/>
                                            </StackPanel>
                                        </Grid>
                                        
                                        <!-- Target Mode -->
                                        <Grid Margin="0,0,0,10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            
                                            <Label Grid.Column="0" Content="Target Mode:" Foreground="White"/>
                                            <ComboBox Grid.Column="1" Width="120" Margin="5,0,15,0" 
                                                      SelectedIndex="{Binding TargetMode, Converter={StaticResource TargetModeToIndexConverter}}">
                                                <ComboBoxItem Content="Click Area"/>
                                                <ComboBoxItem Content="Color Click"/>
                                            </ComboBox>
                                            
                                            <Label Grid.Column="2" Content="Color Settings:" Foreground="White"/>
                                            <StackPanel Grid.Column="3" Orientation="Horizontal">
                                                <Button Content="Set Color" Width="80" Height="25"
                                                        Click="OnSetColorClick" Tag="{Binding}"
                                                        IsEnabled="{Binding TargetMode, Converter={StaticResource IsColorClickModeConverter}}"
                                                        Style="{StaticResource SetAreaButtonStyle}" Margin="0,0,5,0"/>
                                                <Button Content="Set Area" Width="80" Height="25"
                                                        Click="OnSetColorAreaClick" Tag="{Binding}"
                                                        IsEnabled="{Binding TargetMode, Converter={StaticResource IsColorClickModeConverter}}"
                                                        Style="{StaticResource SetAreaButtonStyle}"/>
                                            </StackPanel>
                                        </Grid>
                                        
                                        <!-- Color Area Display -->
                                        <Grid Margin="0,10,0,0" Visibility="{Binding TargetMode, Converter={StaticResource IsColorClickModeConverter}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            
                                            <Label Grid.Column="0" Content="Color Area:" Foreground="White" VerticalAlignment="Center"/>
                                            <Border Grid.Column="1" Background="#1E1E1E" BorderBrush="#3F3F46" BorderThickness="1" 
                                                    Height="40" Margin="5,0,0,0" CornerRadius="3">
                                                <TextBlock Text="{Binding ColorSearchArea, StringFormat='X: {0:F0}, Y: {1:F0}, W: {2:F0}, H: {3:F0}'}" 
                                                           Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                           FontFamily="Consolas" FontSize="11"/>
                                            </Border>
                                        </Grid>
                                        
                                        <!-- Movement Speed -->
                                        <Grid Margin="0,0,0,10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            
                                            <Label Grid.Column="0" Content="Movement Speed:" Foreground="White"/>
                                            <ComboBox Grid.Column="1" Width="120" Margin="5,0,15,0" 
                                                      SelectedIndex="{Binding MovementSpeed, Converter={StaticResource EnumToIndexConverter}}">
                                                <ComboBoxItem Content="Fast"/>
                                                <ComboBoxItem Content="Medium"/>
                                                <ComboBoxItem Content="Slow"/>
                                                <ComboBoxItem Content="Custom"/>
                                            </ComboBox>
                                            
                                            <Label Grid.Column="2" Content="Custom Speed:" Foreground="White"/>
                                            <StackPanel Grid.Column="3" Orientation="Horizontal" Margin="5,0,0,0">
                                                <TextBox Width="60" Text="{Binding CustomMovementDurationMs, UpdateSourceTrigger=PropertyChanged}"
                                                         IsEnabled="{Binding MovementSpeed, Converter={StaticResource IsCustomSpeedConverter}}"/>
                                                <Label Content="ms" Foreground="White" Margin="5,0,0,0"/>
                                            </StackPanel>
                                        </Grid>
                                        
                                                                                 <!-- Custom Position -->
                                         <Grid>
                                             <Grid.ColumnDefinitions>
                                                 <ColumnDefinition Width="Auto"/>
                                                 <ColumnDefinition Width="Auto"/>
                                                 <ColumnDefinition Width="Auto"/>
                                             </Grid.ColumnDefinitions>
                                             
                                             <Label Grid.Column="0" Content="Custom Position:" Foreground="White"/>
                                             <CheckBox Grid.Column="1" Content="Enable" Margin="5,0,5,0"
                                                       IsChecked="{Binding UseRandomPosition, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                             <Button Grid.Column="2" Content="Set Area" Width="70" Height="25"
                                                     Click="OnSetClickAreaClick" Tag="{Binding}"
                                                     IsEnabled="{Binding UseRandomPosition}" Style="{StaticResource SetAreaButtonStyle}"/>
                                         </Grid>
                                         
                                         <!-- Area Display -->
                                         <Grid Margin="0,10,0,0" Visibility="{Binding UseRandomPosition, Converter={StaticResource BooleanToVisibilityConverter}}">
                                             <Grid.ColumnDefinitions>
                                                 <ColumnDefinition Width="Auto"/>
                                                 <ColumnDefinition Width="*"/>
                                             </Grid.ColumnDefinitions>
                                             
                                             <Label Grid.Column="0" Content="Selected Area:" Foreground="White" VerticalAlignment="Center"/>
                                             <Border Grid.Column="1" Background="#1E1E1E" BorderBrush="#3F3F46" BorderThickness="1" 
                                                     Height="40" Margin="5,0,0,0" CornerRadius="3">
                                                 <TextBlock Text="{Binding ClickArea, StringFormat='X: {0:F0}, Y: {1:F0}, W: {2:F0}, H: {3:F0}'}" 
                                                            Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                            FontFamily="Consolas" FontSize="11"/>
                                             </Border>
                                         </Grid>
                                    </StackPanel>
                                </Expander>
                            </Grid>
                        </Border>
                                         </DataTemplate>
                 </ItemsControl.ItemTemplate>
             </ItemsControl>
         </ScrollViewer>
        </Grid>
        
                 <!-- Action Buttons -->
         <StackPanel Grid.Row="2" Orientation="Horizontal" 
                     HorizontalAlignment="Center" Margin="10">
             <Button Content="Add Step" Click="OnAddStepClick" Width="100" Height="40" Margin="5"/>
             <Button Content="Clear Sequence" Click="OnClearAllStepsClick" Width="100" Height="40" Margin="5"/>
             <Button Content="Save" Click="OnSaveSequenceClick" Width="80" Height="40" Margin="5" Style="{StaticResource SaveLoadButtonStyle}"/>
             <Button Content="Load" Click="OnLoadSequenceClick" Width="80" Height="40" Margin="5" Style="{StaticResource SaveLoadButtonStyle}"/>
             <Button Content="Use Sequence" Click="OnUseSequenceClick" Width="100" Height="40" Margin="5" Style="{StaticResource UseSequenceButtonStyle}"/>
             <Button Content="Cancel" Click="OnCancelClick" Width="80" Height="40" Margin="5" Style="{StaticResource CancelButtonStyle}"/>
         </StackPanel>
    </Grid>
</Window>
