<Window x:Class="PowerfulWizard.SequenceConfiguratorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PowerfulWizard"
                          Title="Sequence Configurator" Height="700" Width="1000"
         WindowStartupLocation="CenterScreen" Background="#2D2D30">
    
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="3" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#3E3E42"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="#3E3E42"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="MainBorder" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Content Presenter for the selected item -->
                                    <ContentPresenter x:Name="ContentSite" 
                                                      Grid.Column="0"
                                                      IsHitTestVisible="False" 
                                                      Content="{TemplateBinding SelectionBoxItem}" 
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                                      Margin="{TemplateBinding Padding}" 
                                                      VerticalAlignment="Center" 
                                                      HorizontalAlignment="Left"/>
                                    
                                    <!-- Toggle Button for dropdown arrow -->
                                    <ToggleButton x:Name="ToggleButton" 
                                                  Grid.Column="1" 
                                                  Focusable="false"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press"
                                                  Background="Transparent"
                                                  BorderThickness="0"
                                                  Width="40"
                                                  HorizontalAlignment="Right">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="Border" 
                                                        Background="Transparent" 
                                                        BorderThickness="0">
                                                    <Path x:Name="Arrow" 
                                                          Fill="White" 
                                                          HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center" 
                                                          Margin="5,0,5,0" 
                                                          Data="M 0 0 L 4 4 L 8 0 Z"/>
                                                </Border>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                            
                            <!-- Transparent overlay to make entire ComboBox clickable -->
                            <Border Background="Transparent" 
                                    IsHitTestVisible="True">
                                <ToggleButton x:Name="FullAreaToggle" 
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Background="Transparent" 
                                              BorderThickness="0"
                                              Opacity="0"/>
                            </Border>
                            
                            <!-- Popup for dropdown -->
                            <Popup x:Name="Popup" 
                                   Placement="Bottom" 
                                   IsOpen="{TemplateBinding IsDropDownOpen}" 
                                   AllowsTransparency="True" 
                                   Focusable="False" 
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown" 
                                      SnapsToDevicePixels="True" 
                                      MinWidth="{TemplateBinding ActualWidth}" 
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" 
                                            Background="#3E3E42" 
                                            BorderThickness="1" 
                                            BorderBrush="#555555"/>
                                    <ScrollViewer Margin="4,6,4,6" 
                                                  SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" 
                                                    KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="#555555"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="#3E3E42"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        
        <Style TargetType="ComboBoxItem" x:Key="ComboBoxItemHoverStyle">
            <Setter Property="Background" Value="#555555"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#007ACC"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        

        
        <!-- Converters -->
        <local:ClickTypeToIndexConverter x:Key="ClickTypeToIndexConverter"/>
        <local:LoopModeToIndexConverter x:Key="LoopModeToIndexConverter"/>
    </Window.Resources>
    
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Sequence Name and Loop Mode -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <Label Content="Sequence Name:" Grid.Column="0"/>
            <TextBox x:Name="SequenceNameTextBox" Grid.Column="1" 
                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
            
                         <Label Content="Loop Mode:" Grid.Column="2"/>
             <ComboBox x:Name="LoopModeComboBox" Grid.Column="3" Width="120"
                       SelectedIndex="{Binding LoopMode, Converter={StaticResource LoopModeToIndexConverter}}">
                 <ComboBoxItem Content="Run Once" Style="{StaticResource ComboBoxItemHoverStyle}"/>
                 <ComboBoxItem Content="Loop Forever" Style="{StaticResource ComboBoxItemHoverStyle}"/>
                 <ComboBoxItem Content="Loop Count" Style="{StaticResource ComboBoxItemHoverStyle}"/>
             </ComboBox>
        </Grid>
        
        <!-- Loop Count (visible only when Loop Count is selected) -->
        <Grid x:Name="LoopCountGrid" Grid.Row="1" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <Label Content="Loop Count:" Grid.Column="0"/>
            <TextBox x:Name="LoopCountTextBox" Grid.Column="1" Width="100"
                     Text="{Binding LoopCount, UpdateSourceTrigger=PropertyChanged}"
                     PreviewTextInput="OnPreviewTextInput"/>
        </Grid>
        
        <!-- Steps List -->
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <Label Content="Sequence Steps:" Grid.Row="0" FontWeight="Bold"/>
            
            <ListView x:Name="StepsListView" Grid.Row="1" 
                      ItemsSource="{Binding Steps}"
                      AllowDrop="True"
                      DragOver="OnStepDragOver"
                      Drop="OnStepDrop"
                      Background="#3E3E42"
                      BorderBrush="#555555"
                      BorderThickness="1">
                                 <ListView.ItemTemplate>
                     <DataTemplate>
                         <Border Margin="5" Padding="10" Background="#2A2A2A" BorderBrush="#555555" BorderThickness="1" CornerRadius="5">
                             <Grid>
                                 <Grid.RowDefinitions>
                                     <RowDefinition Height="Auto"/>
                                     <RowDefinition Height="Auto"/>
                                     <RowDefinition Height="Auto"/>
                                 </Grid.RowDefinitions>
                                 
                                 <!-- Row 1: Header with Drag Handle, Description, and Action Buttons -->
                                 <Grid Grid.Row="0" Margin="0,0,0,10">
                                     <Grid.ColumnDefinitions>
                                         <ColumnDefinition Width="Auto"/>
                                         <ColumnDefinition Width="*"/>
                                         <ColumnDefinition Width="Auto"/>
                                     </Grid.ColumnDefinitions>
                                     
                                     <!-- Drag Handle -->
                                     <TextBlock Grid.Column="0" Text="⋮⋮" FontSize="16" 
                                                Foreground="#CCCCCC" Margin="0,0,10,0"
                                                MouseDown="OnDragHandleMouseDown" Cursor="Hand"/>
                                     
                                     <!-- Description -->
                                     <TextBox Grid.Column="1" Margin="5,0,10,0"
                                              Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                              Background="Transparent" BorderThickness="0" FontWeight="Bold"/>
                                     
                                                                           <!-- Action Buttons -->
                                      <StackPanel Grid.Column="2" Orientation="Horizontal">
                                          <Button Content="↑" Width="30" Height="25" Margin="2"
                                                  Click="OnMoveStepUpClick" Tag="{Binding}"/>
                                          <Button Content="↓" Width="30" Height="25" Margin="2"
                                                  Click="OnMoveStepDownClick" Tag="{Binding}"/>
                                          <Button Content="×" Width="30" Height="25" Margin="2"
                                                  Click="OnDeleteStepClick" Tag="{Binding}"/>
                                      </StackPanel>
                                 </Grid>
                                 
                                 <!-- Row 2: Click Type and Timing Settings -->
                                 <Grid Grid.Row="1" Margin="0,0,0,10">
                                     <Grid.ColumnDefinitions>
                                         <ColumnDefinition Width="Auto"/>
                                         <ColumnDefinition Width="*"/>
                                         <ColumnDefinition Width="Auto"/>
                                         <ColumnDefinition Width="*"/>
                                     </Grid.ColumnDefinitions>
                                     
                                     <!-- Click Type -->
                                     <Label Grid.Column="0" Content="Click Type:" VerticalAlignment="Center"/>
                                     <ComboBox Grid.Column="1" Width="120" Margin="5,0,15,0"
                                                SelectedIndex="{Binding ClickType, Converter={StaticResource ClickTypeToIndexConverter}, UpdateSourceTrigger=PropertyChanged}">
                                         <ComboBoxItem Content="Left Click" Style="{StaticResource ComboBoxItemHoverStyle}"/>
                                         <ComboBoxItem Content="Right Click" Style="{StaticResource ComboBoxItemHoverStyle}"/>
                                         <ComboBoxItem Content="Middle Click" Style="{StaticResource ComboBoxItemHoverStyle}"/>
                                         <ComboBoxItem Content="Double Click" Style="{StaticResource ComboBoxItemHoverStyle}"/>
                                     </ComboBox>
                                     
                                     <!-- Delay and Deviation in one cell -->
                                     <Label Grid.Column="2" Content="Timing:" VerticalAlignment="Center"/>
                                     <StackPanel Grid.Column="3" Orientation="Horizontal" Margin="5,0,0,0">
                                         <Label Content="Delay:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                         <TextBox Width="60" Text="{Binding DelayMs, UpdateSourceTrigger=PropertyChanged}"
                                                  PreviewTextInput="OnPreviewTextInput"/>
                                         <Label Content="ms" VerticalAlignment="Center" Margin="5,0,10,0"/>
                                         
                                         <Label Content="±" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                         <TextBox Width="50" Text="{Binding DeviationMs, UpdateSourceTrigger=PropertyChanged}"
                                                  PreviewTextInput="OnPreviewTextInput"/>
                                         <Label Content="ms" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                     </StackPanel>
                                 </Grid>
                                 
                                                                   <!-- Row 3: Movement and Position Settings -->
                                  <Grid Grid.Row="2">
                                      <Grid.ColumnDefinitions>
                                          <ColumnDefinition Width="Auto"/>
                                          <ColumnDefinition Width="*"/>
                                          <ColumnDefinition Width="Auto"/>
                                          <ColumnDefinition Width="Auto"/>
                                          <ColumnDefinition Width="Auto"/>
                                          <ColumnDefinition Width="*"/>
                                      </Grid.ColumnDefinitions>
                                      
                                      <!-- Movement Duration -->
                                      <Label Grid.Column="0" Content="Movement Speed:" VerticalAlignment="Center"/>
                                      <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5,0,15,0">
                                          <TextBox Width="80" Text="{Binding MovementDurationMs, UpdateSourceTrigger=PropertyChanged}"
                                                   PreviewTextInput="OnPreviewTextInput"/>
                                          <Label Content="ms" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                      </StackPanel>
                                      
                                      <!-- Custom Position -->
                                      <Label Grid.Column="2" Content="Custom Position:" VerticalAlignment="Center"/>
                                      <StackPanel Grid.Column="3" Orientation="Horizontal" Margin="5,0,15,0">
                                          <CheckBox Content="Enable" Margin="0,0,5,0"
                                                    IsChecked="{Binding UseRandomPosition, UpdateSourceTrigger=PropertyChanged}"
                                                    Foreground="White" VerticalAlignment="Center"/>
                                          <Button Content="Set Area" Width="70" Height="25" Margin="2"
                                                  Click="OnSetClickAreaClick" Tag="{Binding}"
                                                  IsEnabled="{Binding UseRandomPosition}"/>
                                      </StackPanel>

                                  </Grid>
                             </Grid>
                         </Border>
                     </DataTemplate>
                 </ListView.ItemTemplate>
            </ListView>
        </Grid>
        
        <!-- Action Buttons -->
        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,0">
            <Button Content="Add Step" Click="OnAddStepClick"/>
            <Button Content="Clear Sequence" Click="OnClearAllStepsClick"/>
            <Button Content="Test Sequence" Click="OnTestSequenceClick"/>
            <Button Content="Save Sequence" Click="OnSaveSequenceClick"/>
            <Button Content="Load Sequence" Click="OnLoadSequenceClick"/>
        </StackPanel>
        
        <!-- Use/Cancel Buttons -->
        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,0">
            <Button Content="Use Sequence" Click="OnUseSequenceClick" Background="#28A745" Width="120"/>
            <Button Content="Cancel" Click="OnCancelClick" Background="#DC3545" Width="80" Margin="10,0,0,0"/>
        </StackPanel>
    </Grid>
</Window>
